http {
client_max_body_size 100M;
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name www.tfpers.software;
        rewrite ^(.*) https://$host$1 permanent;
        return 301 https://$server_name$request_uri;

        location / { 
            proxy_pass          http://nextjs:3000/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }

        location /be-path/ {
            proxy_pass          http://backend:5000/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }
    }
        
    server {      #Monitor port 443
        listen    443;
        server_name  www.tfpers.software;             #domain name

        # Add ssl
        ssl on;        #If you force HTTP access, this line should be opened
        ssl_certificate /etc/nginx/ssl/tfpers.crt;   #The crt file storage path of nginx for ssl certificate of domain name application
        ssl_certificate_key /etc/nginx/ssl/tfpers.key;      #Storage path of nginx key file of ssl certificate for domain name application

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        # Specify the password as a format supported by openssl
        ssl_protocols  SSLv2 SSLv3 TLSv1.2;

        ssl_ciphers  HIGH:!aNULL:!MD5;  # Password encryption method
        ssl_prefer_server_ciphers  on;   # Server passwords that rely on SSLv3 and TLSv1 protocols will take precedence over client passwords

        # Define the index directory and name of the first page        
        location / {
            proxy_pass          http://nextjs:3000/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }
    
        location /be-path/ {
            proxy_pass          http://backend:5000/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }
    }
}

# server {
#   listen 80 default_server;

#   server_name _;

#   server_tokens off;

#   gzip on;
#   gzip_proxied any;
#   gzip_comp_level 4;
#   gzip_types text/css application/javascript image/svg+xml;

#   proxy_http_version 1.1;
#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection 'upgrade';
#   proxy_set_header Host $host;
#   proxy_cache_bypass $http_upgrade;

#   location /_next/static {
#     proxy_cache STATIC;
#     proxy_pass http://nextjs_upstream;

#     # For testing cache - remove before deploying to production
#     add_header X-Cache-Status $upstream_cache_status;
#   }

#   location /static {
#     proxy_cache STATIC;
#     proxy_ignore_headers Cache-Control;
#     proxy_cache_valid 60m;
#     proxy_pass http://nextjs_upstream;

#     # For testing cache - remove before deploying to production
#     add_header X-Cache-Status $upstream_cache_status;
#   }

#   location / {
#     proxy_pass http://nextjs_upstream;
#   }
# }